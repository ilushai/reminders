# services/reminder_parser.py
import openai
import json
import re
from my_config import OPENAI_API_KEY

openai.api_key = OPENAI_API_KEY

SYSTEM_PROMPT = """
–¢—ã –ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π.
–ü–∞—Ä—Å—å –≤—Ö–æ–¥—è—â–∏–π —Ç–µ–∫—Å—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –≤—ã–¥–∞–π —Å—Ç—Ä–æ–≥–æ JSON —Å–æ —Å–ª–µ–¥—É—é—â–∏–º–∏ –ø–æ–ª—è–º–∏:

- remind_at: —Ç–æ—á–Ω–∞—è –¥–∞—Ç–∞ –∏ –≤—Ä–µ–º—è —Å–æ–±—ã—Ç–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO (–Ω–∞–ø—Ä–∏–º–µ—Ä, 2025-05-30T16:00:00+03:00). –ï—Å–ª–∏ –¥–∞—Ç–∞ –Ω–µ–ø–æ–ª–Ω–∞—è –∏–ª–∏ –Ω–µ –ø–æ–Ω—è—Ç–Ω–∞ ‚Äî –Ω–∞–ø–∏—à–∏ "NEEDS_CLARIFICATION".
- text: —á—Ç–æ —Å–¥–µ–ª–∞—Ç—å (–∫—Ä–∞—Ç–∫–æ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö —Å–ª–æ–≤), –≤ –Ω–∞—á–∞–ª–µ –¥–æ–±–∞–≤—å —Å–º–∞–π–ª–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:
  - üèÉ‚Äç‚ôÇÔ∏è —Å–ø–æ—Ä—Ç
  - üìö —É—á—ë–±–∞
  - üõãÔ∏è –æ—Ç–¥—ã—Ö
  - üçΩÔ∏è –µ–¥–∞
  - üíä –∑–¥–æ—Ä–æ–≤—å–µ
  - üíº —Ä–∞–±–æ—Ç–∞
  - üõí –ø–æ–∫—É–ø–∫–∏
  - üöó —Ç—Ä–∞–Ω—Å–ø–æ—Ä—Ç
  - üéâ —Å–æ–±—ã—Ç–∏–µ
  - üí∞ —Ñ–∏–Ω–∞–Ω—Å—ã
  - üßπ –¥–æ–º
  - üìÖ –≤—Å—Ç—Ä–µ—á–∞
- remind_before: –∑–∞ —Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç –¥–æ —Å–æ–±—ã—Ç–∏—è –Ω–∞–ø–æ–º–Ω–∏—Ç—å (–µ—Å–ª–∏ –Ω–µ —É–∫–∞–∑–∞–Ω–æ ‚Äî 0)
- needs_clarification: true/false ‚Äî –µ—Å–ª–∏ –Ω–µ —É–¥–∞–ª–æ—Å—å –æ–¥–Ω–æ–∑–Ω–∞—á–Ω–æ –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –¥–∞—Ç—É/–≤—Ä–µ–º—è, –≤–µ—Ä–Ω–∏ true

–ü—Ä–∞–≤–∏–ª–∞:
- –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≥–æ–≤–æ—Ä–∏—Ç "–Ω–∞–ø–æ–º–Ω–∏ –∑–∞ —á–∞—Å", "–∑–∞ 5 –º–∏–Ω—É—Ç", "–∑–∞ 30 –º–∏–Ω—É—Ç" ‚Äî —É–∫–∞–∂–∏ remind_before –≤ –º–∏–Ω—É—Ç–∞—Ö (1 —á–∞—Å = 60 –º–∏–Ω).
- –ï—Å–ª–∏ –≤—Ä–µ–º—è —É–∫–∞–∑–∞–Ω–æ –∫–∞–∫ "—Å–µ–≥–æ–¥–Ω—è", "–∑–∞–≤—Ç—Ä–∞", "–ø–æ—Å–ª–µ–∑–∞–≤—Ç—Ä–∞" ‚Äî —Ä–∞—Å—Å—á–∏—Ç–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É—é –¥–∞—Ç—É, –∏—Å–ø–æ–ª—å–∑—É—è —Ç–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç: {now_iso}
- –ï—Å–ª–∏ —É–∫–∞–∑–∞–Ω —Ç–æ–ª—å–∫–æ —á–∞—Å ("–≤ 15:00"), –æ–ø—Ä–µ–¥–µ–ª–∏ –±–ª–∏–∂–∞–π—à—É—é –¥–∞—Ç—É: –µ—Å–ª–∏ –≤—Ä–µ–º—è –µ—â—ë –Ω–µ –Ω–∞—Å—Ç—É–ø–∏–ª–æ ‚Äî —Å–µ–≥–æ–¥–Ω—è, –µ—Å–ª–∏ –ø—Ä–æ—à–ª–æ ‚Äî –∑–∞–≤—Ç—Ä–∞.
- –ï—Å–ª–∏ –ø—Ä–æ—Å–∏—Ç ‚Äú–Ω–∞–ø–æ–º–Ω–∏—Ç—å –≤ 15:00‚Äù –±–µ–∑ –¥–µ–ª–∞ ‚Äî text –æ—Å—Ç–∞–≤—å –ø—É—Å—Ç—ã–º, —Ç–æ–ª—å–∫–æ —Å–º–∞–π–ª–∏–∫ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –Ω–µ –Ω—É–∂–µ–Ω.
- –í—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –∏ –¥–∞—Ç—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ —á–∞—Å–æ–≤–æ–º –ø–æ—è—Å–µ +03:00 (–ú–æ—Å–∫–≤–∞).
- –ï—Å–ª–∏ –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è —Ç–æ—á–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏, –≤–µ—Ä–Ω–∏ "NEEDS_CLARIFICATION" –∏ needs_clarification: true.

–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞:
{
  "remind_at": "2025-05-30T16:00:00+03:00",
  "text": "üíä –ó–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥—É",
  "remind_before": 30,
  "needs_clarification": false
}
"""



def clean_json(raw):
    """–£–±–∏—Ä–∞–µ—Ç markdown-–æ–±—ë—Ä—Ç–∫–∏, –µ—Å–ª–∏ GPT –≤—Å—ë —Ä–∞–≤–Ω–æ –∏—Ö –≤–µ—Ä–Ω—ë—Ç"""
    raw = raw.strip()
    if raw.startswith("```"):
        raw = re.sub(r"^```[a-zA-Z]*\n?", "", raw)
        raw = re.sub(r"\n?```$", "", raw)
    return raw.strip()

def parse_reminder(text, now_iso: str):
    user_prompt = f"–¢–µ–∫—É—â–∏–π –º–æ–º–µ–Ω—Ç: {now_iso}\n–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {text}"
    completion = openai.ChatCompletion.create(
        model="gpt-4o-mini",
        messages=[
            {"role": "system", "content": SYSTEM_PROMPT},
            {"role": "user", "content": user_prompt}
        ],
        max_tokens=250,
        temperature=0.0,
    )
    content = completion["choices"][0]["message"]["content"]
    return clean_json(content)

if __name__ == "__main__":
    import datetime, pytz
    now_iso = datetime.datetime.now(pytz.timezone("Europe/Moscow")).isoformat()
    test_text = "8 –º–∞—è –≤ 16:00 –º–Ω–µ –Ω–∞–¥–æ –∑–∞–ø–∏—Å–∞—Ç—å—Å—è –∫ —Å—Ç–æ–º–∞—Ç–æ–ª–æ–≥—É –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ –∑—É–±–∞. –ù–∞–ø–æ–º–Ω–∏ –∑–∞ 30 –º–∏–Ω—É—Ç –¥–æ —ç—Ç–æ–≥–æ."
    result = parse_reminder(test_text, now_iso)
    print("RAW result from GPT:\n", result)
    parsed = json.loads(result)
    print("Parsed JSON:")
    print(parsed)
